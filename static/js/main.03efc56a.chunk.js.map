{"version":3,"sources":["components/Card.js","components/Cards.js","components/Form.js","components/Title.js","App.js","index.js"],"names":["Card","reminders","reminder","setReminders","useState","editMode","setEditMode","imePolje","setImePolje","reminderPolje","setReminderPolje","onSubmit","e","editedReminder","id","ime","trim","remindTo","datum","localData","filter","item","preventDefault","localStorage","setItem","LOCAL_KEY","JSON","stringify","htmlFor","type","name","value","size","onChange","target","style","display","className","onClick","filteredReminders","Cards","map","key","Form","newReminder","Math","floor","random","Date","now","toString","Title","App","parse","getItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAGe,SAASA,EAAT,GAAsD,IAAtCC,EAAqC,EAArCA,UAAWC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,aAAgB,EAClCC,oBAAS,GADyB,mBAC3DC,EAD2D,KACjDC,EADiD,OAElCF,mBAAS,IAFyB,mBAE3DG,EAF2D,KAEjDC,EAFiD,OAGxBJ,mBAAS,IAHe,mBAG3DK,EAH2D,KAG5CC,EAH4C,KA+ClE,OACE,oCACE,4BAEGL,EACC,0BAAMM,SAlCd,SAAuBC,GACrB,IAAMC,EAAiB,CACrBC,GAAIZ,EAASY,GACbC,IAAKR,EAASS,OACdC,SAAUR,EAAcO,OACxBE,MAAOhB,EAASgB,OAEZC,EAAS,sBACVlB,EAAUmB,QAAO,SAACC,GAAD,OAAUnB,EAASY,KAAOO,EAAKP,OADtC,CAEbD,IAEF,MACe,KAAbN,GACkB,KAAlBE,GACY,MAAZF,GACiB,MAAjBE,EAEOG,EAAEU,kBAGPV,EAAEU,iBACFnB,EAAagB,GACbI,aAAaC,QAAQC,EAAWC,KAAKC,UAAUR,IAC/CX,EAAY,IACZE,EAAiB,IACjBJ,GAAY,MAUR,2BAAOsB,QAAQ,UAAf,UACA,2BACEC,KAAK,OACLC,KAAK,SACLhB,GAAG,SACHiB,MAAOxB,EACPyB,KAAK,KACLC,SAAU,SAACrB,GAAD,OAAOJ,EAAYI,EAAEsB,OAAOH,UAExC,2BAAOH,QAAQ,YAAf,MACA,2BACEC,KAAK,OACLC,KAAK,WACLhB,GAAG,WACHiB,MAAOtB,EACPwB,SAAU,SAACrB,GAAD,OAAOF,EAAiBE,EAAEsB,OAAOH,UAE7C,2BAAOF,KAAK,SAASM,MAAO,CAAEC,QAAS,WAGzC,oCACE,4BAAKlC,EAASa,KACd,uBAAGsB,UAAU,YAAYnC,EAASe,UAClC,uBAAGoB,UAAU,SAASnC,EAASgB,OAC/B,4BAAQmB,UAAU,YAAYC,QAxEnB,WACnB,IAAMC,EAAoBtC,EAAUmB,QAClC,SAACC,GAAD,OAAUnB,EAASY,KAAOO,EAAKP,MAEjCX,EAAaoC,KAoEL,UAGA,4BAAQF,UAAU,UAAUC,QApEnB,WACjBhC,GAAY,GACZE,EAAYN,EAASa,KACrBL,EAAiBR,EAASe,YAiElB,eChFG,SAASuB,EAAT,GAA6C,IAA5BvC,EAA2B,EAA3BA,UAAWE,EAAgB,EAAhBA,aACzC,OACE,wBAAIkC,UAAU,SACXpC,EAAUwC,KAAI,SAACvC,GACd,OACE,kBAACF,EAAD,CACE0C,IAAKxC,EAASY,GACdZ,SAAUA,EACVC,aAAcA,EACdF,UAAWA,QCRR,SAAS0C,EAAT,GAA4C,IAA5B1C,EAA2B,EAA3BA,UAAWE,EAAgB,EAAhBA,aAAgB,EACxBC,mBAAS,IADe,mBACjDG,EADiD,KACvCC,EADuC,OAEdJ,mBAAS,IAFK,mBAEjDK,EAFiD,KAElCC,EAFkC,KA+BxD,OACE,6BAAS2B,UAAU,gBACjB,0BAAM1B,SA7BV,SAAuBC,GACrB,IAAMgC,EAAc,CAClB9B,GAAI+B,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBhC,IAAKR,EAASS,OACdC,SAAUR,EAAcO,OACxBE,MAAO8B,KAAKC,MAAMC,YAEpB,MACe,KAAb3C,GACkB,KAAlBE,GACY,MAAZF,GACiB,MAAjBE,EAEOG,EAAEU,kBAGPV,EAAEU,iBACFnB,EAAa,GAAD,mBAAKF,GAAL,CAAgB2C,KAC5BrB,aAAaC,QACXC,EACAC,KAAKC,UAAL,sBAAmB1B,GAAnB,CAA8B2C,MAEhCpC,EAAY,IACZE,EAAiB,OAOjB,2BAAOkB,QAAQ,UAAf,UACA,2BACEC,KAAK,OACLC,KAAK,SACLhB,GAAG,SACHiB,MAAOxB,EACPyB,KAAK,KACLC,SAAU,SAACrB,GAAD,OAAOJ,EAAYI,EAAEsB,OAAOH,UAExC,2BAAOH,QAAQ,YAAf,MACA,2BACEC,KAAK,OACLC,KAAK,WACLhB,GAAG,WACHiB,MAAOtB,EACPwB,SAAU,SAACrB,GAAD,OAAOF,EAAiBE,EAAEsB,OAAOH,UAE7C,2BAAOF,KAAK,SAASM,MAAO,CAAEC,QAAS,YCrDhC,SAASe,IACtB,OAAO,wCCGF,IAAM1B,EAAY,kBAwBV2B,MAtBf,WAAgB,IAAD,EACqBhD,mBAChCsB,KAAK2B,MAAM9B,aAAa+B,QAAQ7B,KAAe,CAC7C,CACEX,GAAI+B,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBhC,IAAK,OACLE,SAAU,iCACVC,MAAO8B,KAAKC,MAAMC,cAPX,mBACNjD,EADM,KACKE,EADL,KAWb,OACE,oCACE,kBAACgD,EAAD,MACA,yBAAKd,UAAU,aACb,kBAACM,EAAD,CAAM1C,UAAWA,EAAWE,aAAcA,IAC1C,kBAACqC,EAAD,CAAOvC,UAAWA,EAAWE,aAAcA,OCpBnDoD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.03efc56a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { LOCAL_KEY } from \"../App\";\r\n\r\nexport default function Card({ reminders, reminder, setReminders }) {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [imePolje, setImePolje] = useState(\"\");\r\n  const [reminderPolje, setReminderPolje] = useState(\"\");\r\n\r\n  const handleDelete = () => {\r\n    const filteredReminders = reminders.filter(\r\n      (item) => reminder.id !== item.id\r\n    );\r\n    setReminders(filteredReminders);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setEditMode(true);\r\n    setImePolje(reminder.ime);\r\n    setReminderPolje(reminder.remindTo);\r\n  };\r\n\r\n  function hendlajSubmit(e) {\r\n    const editedReminder = {\r\n      id: reminder.id,\r\n      ime: imePolje.trim(),\r\n      remindTo: reminderPolje.trim(),\r\n      datum: reminder.datum,\r\n    };\r\n    const localData = [\r\n      ...reminders.filter((item) => reminder.id !== item.id),\r\n      editedReminder,\r\n    ];\r\n    if (\r\n      imePolje === \"\" ||\r\n      reminderPolje === \"\" ||\r\n      imePolje == null ||\r\n      reminderPolje == null\r\n    ) {\r\n      return e.preventDefault();\r\n    } else\r\n      return (\r\n        e.preventDefault(),\r\n        setReminders(localData),\r\n        localStorage.setItem(LOCAL_KEY, JSON.stringify(localData)),\r\n        setImePolje(\"\"),\r\n        setReminderPolje(\"\"),\r\n        setEditMode(false)\r\n      );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <li>\r\n        {/* {editMode ? <p>KE</p> : \"BLČ\"} */}\r\n        {editMode ? (\r\n          <form onSubmit={hendlajSubmit}>\r\n            <label htmlFor=\"person\">Remind</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"person\"\r\n              id=\"person\"\r\n              value={imePolje}\r\n              size=\"10\"\r\n              onChange={(e) => setImePolje(e.target.value)}\r\n            />\r\n            <label htmlFor=\"reminder\">to</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"reminder\"\r\n              id=\"reminder\"\r\n              value={reminderPolje}\r\n              onChange={(e) => setReminderPolje(e.target.value)}\r\n            />\r\n            <input type=\"submit\" style={{ display: \"none\" }} />\r\n          </form>\r\n        ) : (\r\n          <>\r\n            <h4>{reminder.ime}</h4>\r\n            <p className=\"taskText\">{reminder.remindTo}</p>\r\n            <p className=\"datum\">{reminder.datum}</p>\r\n            <button className=\"deleteBtn\" onClick={handleDelete}>\r\n              Delete\r\n            </button>\r\n            <button className=\"editBtn\" onClick={handleEdit}>\r\n              - Edit -\r\n            </button>\r\n          </>\r\n        )}\r\n      </li>\r\n    </>\r\n  );\r\n}\r\n\r\n// function renderCards() {\r\n//   let html = \"\";\r\n//   tasks.forEach((task) => {\r\n//     let inject = `<li id=${task.id}><h4>${task.name}</h4> <p class=taskText>${task.text}</p> <p class=\"datum\">${task.datum}</p><button class=\"deleteBtn\">Delete</button></li>`;\r\n//     html = html + inject;\r\n//   });\r\n//   cards.innerHTML = html;\r\n// }\r\n","import React from \"react\";\r\nimport Card from \"../components/Card\";\r\n\r\nexport default function Cards({ reminders, setReminders }) {\r\n  return (\r\n    <ul className=\"cards\">\r\n      {reminders.map((reminder) => {\r\n        return (\r\n          <Card\r\n            key={reminder.id}\r\n            reminder={reminder}\r\n            setReminders={setReminders}\r\n            reminders={reminders}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport { LOCAL_KEY } from \"../App\";\r\n\r\nexport default function Form({ reminders, setReminders }) {\r\n  const [imePolje, setImePolje] = useState(\"\");\r\n  const [reminderPolje, setReminderPolje] = useState(\"\");\r\n\r\n  function hendlajSubmit(e) {\r\n    const newReminder = {\r\n      id: Math.floor(Math.random() * 100000),\r\n      ime: imePolje.trim(),\r\n      remindTo: reminderPolje.trim(),\r\n      datum: Date.now().toString(),\r\n    };\r\n    if (\r\n      imePolje === \"\" ||\r\n      reminderPolje === \"\" ||\r\n      imePolje == null ||\r\n      reminderPolje == null\r\n    ) {\r\n      return e.preventDefault();\r\n    } else\r\n      return (\r\n        e.preventDefault(),\r\n        setReminders([...reminders, newReminder]),\r\n        localStorage.setItem(\r\n          LOCAL_KEY,\r\n          JSON.stringify([...reminders, newReminder])\r\n        ),\r\n        setImePolje(\"\"),\r\n        setReminderPolje(\"\")\r\n      );\r\n  }\r\n\r\n  return (\r\n    <section className=\"inputSection\">\r\n      <form onSubmit={hendlajSubmit}>\r\n        <label htmlFor=\"person\">Remind</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"person\"\r\n          id=\"person\"\r\n          value={imePolje}\r\n          size=\"10\"\r\n          onChange={(e) => setImePolje(e.target.value)}\r\n        />\r\n        <label htmlFor=\"reminder\">to</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"reminder\"\r\n          id=\"reminder\"\r\n          value={reminderPolje}\r\n          onChange={(e) => setReminderPolje(e.target.value)}\r\n        />\r\n        <input type=\"submit\" style={{ display: \"none\" }} />\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Title() {\r\n  return <h1>Reminder</h1>;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Cards from \"./components/Cards\";\r\nimport Form from \"./components/Form\";\r\nimport Title from \"./components/Title\";\r\n\r\nexport const LOCAL_KEY = \"moji-rimajnderi\";\r\n\r\nfunction App() {\r\n  const [reminders, setReminders] = useState(\r\n    JSON.parse(localStorage.getItem(LOCAL_KEY)) || [\r\n      {\r\n        id: Math.floor(Math.random() * 100000),\r\n        ime: \"Deki\",\r\n        remindTo: \"Vježbaj React, jebemusve!\",\r\n        datum: Date.now().toString(),\r\n      },\r\n    ]\r\n  );\r\n  return (\r\n    <>\r\n      <Title />\r\n      <div className=\"container\">\r\n        <Form reminders={reminders} setReminders={setReminders} />\r\n        <Cards reminders={reminders} setReminders={setReminders} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}